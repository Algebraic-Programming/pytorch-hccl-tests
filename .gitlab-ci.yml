image: "python:3.8"

stages:
    - Static Analysis
    - Testing
    - Packaging
    - Installing

prospector:
    tags:
        - docker
    stage: Static Analysis
    script:
        - pip install prospector==1.3.0
        - prospector

black:
    tags:
        - docker
    stage: Static Analysis
    script:
        - pip install black==23.3.0 # The version here should be the same as in .pre-commit-config.yaml
        - black --check .

pypackage-install-test:
    tags:
        - docker
    stage: Installing
    script:
        - make install

unit_test_latency_cpu:
    tags:
        - docker
    stage: Testing
    script:
        - make install
        - make latency

unit_test_python_3_8:
    tags:
        - docker
    stage: Testing
    script:
        - pip install pytest
        - pwd
        - ls -l
        - make install
        - python -m pytest --junitxml=pytest-report.xml tests/
    artifacts:
        when: always
        reports:
            junit: pytest-report.xml

unit_test_python_3_9:
    image: "python:3.9"
    tags:
        - docker
    stage: Testing
    script:
        - pip install pytest
        - pwd
        - ls -l
        - make install
        - python -m pytest tests/

test_cov:
    tags:
        - docker
    stage: Testing
    script:
        - pip install -r requirements_dev.txt
        - pwd
        - ls -l
        - export PYTHONPATH="$PYTHONPATH:."
        - python -c "import sys;print(sys.path)"
        - make install
        - coverage run --source pytorch_hccl_tests -m pytest
        - coverage xml
        - coverage report -m
    artifacts:
        reports:
            coverage_report:
                coverage_format: cobertura
                path: coverage.xml
    coverage: '/TOTAL.*\s+(\d+%)$/' # See https://stackoverflow.com/questions/66780206/gitlab-coverage-badge-always-unknow

python_packaging:
    tags:
        - docker
    stage: Packaging
    script:
        - make dist

secret_detection:
    stage: Static Analysis
    tags:
        - docker
    image:
        name: "zricethezav/gitleaks:v8.0.6"
        entrypoint: [""]
    script:
        - gitleaks detect -v --source .
